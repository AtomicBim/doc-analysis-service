import React, { useState } from 'react';
import './App.css';
import Header from './components/Header';
import RequirementList from './components/RequirementList';
import PdfViewer from './components/PdfViewer';
import RequirementEditor, { EditableRequirement } from './components/RequirementEditor';
import ResizablePanels from './components/ResizablePanels';
import EmptyState from './components/EmptyState';
import { Requirement } from './types';
import { useLocalStorage } from './hooks/useLocalStorage';
import { useNotification } from './hooks/useNotification';
import { STORAGE_KEYS, MESSAGES, TIMEOUTS } from './constants';

interface AppState {
  currentStep: 1 | 2;
  confirmedRequirements: EditableRequirement[] | null;
  requirements: Requirement[];
  summary: string;
  sheetToPdfMapping: Record<string, number>;
  analysisCompleted: boolean;
}

const initialAppState: AppState = {
  currentStep: 1,
  confirmedRequirements: null,
  requirements: [],
  summary: '',
  sheetToPdfMapping: {},
  analysisCompleted: false,
};

function App() {
  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è)
  const [extractedRequirements, setExtractedRequirements] = useState<EditableRequirement[] | null>(null);
  const [showRequirementEditor, setShowRequirementEditor] = useState(false);
  const [pdfFile, setPdfFile] = useState<File | null>(null);
  const [selectedPage, setSelectedPage] = useState<number | null>(null);
  const [highlightText, setHighlightText] = useState<string>('');
  const [pageChangeKey, setPageChangeKey] = useState<number>(0);

  // –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const { notification, showNotification, hideNotification } = useNotification();

  // –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage
  const { storedValue: appState, setStoredValue: setAppState, clearStorage } = useLocalStorage<AppState>({
    key: STORAGE_KEYS.APP_DATA,
    initialValue: initialAppState,
    onRestore: (data) => {
      console.log('üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage:', data);
      const hasResults = data.requirements && data.requirements.length > 0;
      showNotification(
        hasResults
          ? `üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ (${data.requirements.length} —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π). –ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á–µ—Ä—Ç–µ–∂–µ–π.`
          : 'üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        TIMEOUTS.NOTIFICATION_LONG
      );
    },
  });

  // –®–∞–≥ 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
  const handleRequirementsExtracted = (reqs: EditableRequirement[]) => {
    setExtractedRequirements(reqs);
    setShowRequirementEditor(true);
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É 2
  const handleRequirementsConfirmed = (reqs: EditableRequirement[]) => {
    setAppState({
      ...appState,
      confirmedRequirements: reqs,
      currentStep: 2,
    });
    setShowRequirementEditor(false);
  };

  // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleRequirementsCancel = () => {
    setShowRequirementEditor(false);
    setExtractedRequirements(null);
  };

  // –®–∞–≥ 2: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
  const handleAnalysisComplete = (
    newRequirements: Requirement[],
    newSummary: string,
    mapping?: Record<string, number>
  ) => {
    setAppState({
      ...appState,
      requirements: newRequirements,
      summary: newSummary,
      analysisCompleted: true,
      sheetToPdfMapping: mapping || appState.sheetToPdfMapping,
    });
    
    if (mapping) {
      console.log('üìä –ü–æ–ª—É—á–µ–Ω mapping –ª–∏—Å—Ç–æ–≤:', mapping);
    }
  };

  const handleDocFileChange = (file: File | null) => {
    setPdfFile(file);
    setSelectedPage(null);
    setHighlightText('');
  };

  const handleRequirementSelect = (page: number, textToHighlight?: string) => {
    setSelectedPage(page);
    setHighlightText(textToHighlight || '');
    setPageChangeKey(prev => prev + 1);
  };

  // –°–±—Ä–æ—Å –∫ —à–∞–≥—É 1 (–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ)
  const handleReset = () => {
    if (!window.confirm(MESSAGES.CONFIRM.RESET)) return;

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setExtractedRequirements(null);
    setPdfFile(null);
    setSelectedPage(null);
    setHighlightText('');

    // –û—á–∏—â–∞–µ–º localStorage –∏ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    try {
      clearStorage();
      showNotification(MESSAGES.SUCCESS.STORAGE_CLEANUP, TIMEOUTS.NOTIFICATION_SHORT);
    } catch (error) {
      console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error);
      showNotification(MESSAGES.ERROR.STORAGE_CLEANUP, TIMEOUTS.NOTIFICATION_SHORT);
    }
  };

  const selectedRequirementsCount = appState.confirmedRequirements?.filter(r => r.selected).length || 0;

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Header
  const headerContent = (
    <Header 
      onRequirementsExtracted={handleRequirementsExtracted}
      onAnalysisComplete={handleAnalysisComplete}
      onDocFileChange={handleDocFileChange}
      confirmedRequirements={appState.confirmedRequirements}
      analysisCompleted={appState.analysisCompleted}
      onReset={handleReset}
    />
  );

  // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è)
  const leftPanelContent = (
    <div className="panel-content">
      {appState.currentStep === 1 ? (
        <EmptyState
          icon="üìã"
          text="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¢–ó –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"
          hint="–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –±—É–¥—É—Ç –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏ –ø–æ–∫–∞–∑–∞–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        />
      ) : appState.requirements.length > 0 ? (
        <RequirementList
          requirements={appState.requirements}
          onSelect={handleRequirementSelect}
          sheetToPdfMapping={appState.sheetToPdfMapping}
        />
      ) : (
        <EmptyState
          icon="üìä"
          text="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"
          hint={`–ü—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –ø–æ ${selectedRequirementsCount} —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º`}
        />
      )}
    </div>
  );

  // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (PDF + —Å–≤–æ–¥–∫–∞)
  const rightPanelContent = (
    <div className="panel-content">
      {appState.requirements.length > 0 && !pdfFile ? (
        <EmptyState
          className="empty-state pdf-missing-state"
          icon="üìÑ"
          text="PDF —Ñ–∞–π–ª –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
          hint="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ localStorage, –Ω–æ PDF —Ñ–∞–π–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á–µ—Ä—Ç–µ–∂–µ–π."
          action="‚Üë –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –≤ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏"
        />
      ) : (
        <PdfViewer
          file={pdfFile}
          page={selectedPage}
          highlightText={highlightText}
          key={pageChangeKey}
        />
      )}
      {appState.summary && (
        <div className="summary-container">
          <h3>–û–±—â–∞—è —Å–≤–æ–¥–∫–∞</h3>
          <pre>{appState.summary}</pre>
          <button className="btn-reset" onClick={handleReset}>
            üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
          </button>
        </div>
      )}
    </div>
  );

  return (
    <div className="App">
      <ResizablePanels
        header={headerContent}
        leftPanel={leftPanelContent}
        rightPanel={rightPanelContent}
      />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π */}
      {showRequirementEditor && extractedRequirements && (
        <RequirementEditor
          requirements={extractedRequirements}
          onConfirm={handleRequirementsConfirmed}
          onCancel={handleRequirementsCancel}
        />
      )}

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
      {notification && (
        <div className="notification">
          <div className="notification-content">
            <span className="notification-icon">üíæ</span>
            <span className="notification-text">{notification}</span>
            <button
              className="notification-close"
              onClick={hideNotification}
              aria-label="–ó–∞–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
            >
              ‚úï
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;