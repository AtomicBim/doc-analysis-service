import React, { useState, useEffect } from 'react';
import './App.css';
import Header from './components/Header';
import RequirementList from './components/RequirementList';
import PdfViewer from './components/PdfViewer';
import RequirementEditor, { EditableRequirement } from './components/RequirementEditor';
import ResizablePanels from './components/ResizablePanels';
import { Requirement } from './types';

function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–≤—É—Ö—à–∞–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
  const [currentStep, setCurrentStep] = useState<1 | 2>(1);

  // –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [extractedRequirements, setExtractedRequirements] = useState<EditableRequirement[] | null>(null);
  const [showRequirementEditor, setShowRequirementEditor] = useState(false);

  // –®–∞–≥ 2: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  const [confirmedRequirements, setConfirmedRequirements] = useState<EditableRequirement[] | null>(null);

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
  const [requirements, setRequirements] = useState<Requirement[]>([]);
  const [summary, setSummary] = useState<string>('');
  const [pdfFile, setPdfFile] = useState<File | null>(null);
  const [selectedPage, setSelectedPage] = useState<number | null>(null);
  const [highlightText, setHighlightText] = useState<string>('');
  const [pageChangeKey, setPageChangeKey] = useState<number>(0);
  const [analysisCompleted, setAnalysisCompleted] = useState(false);

  // Mapping –Ω–æ–º–µ—Ä–æ–≤ –ª–∏—Å—Ç–æ–≤ –Ω–∞ —á–µ—Ä—Ç–µ–∂–∞—Ö ‚Üí –ø–æ—Ä—è–¥–∫–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ PDF
  const [sheetToPdfMapping, setSheetToPdfMapping] = useState<Record<string, number>>({});

  // –ö–ª—é—á –¥–ª—è localStorage
  const STORAGE_KEY = 'doc-analysis-app-data';

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const [notification, setNotification] = useState<string | null>(null);

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    try {
      const savedData = localStorage.getItem(STORAGE_KEY);
      if (savedData) {
        const parsed = JSON.parse(savedData);
        console.log('üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage:', parsed);

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (parsed.currentStep) setCurrentStep(parsed.currentStep);
        if (parsed.confirmedRequirements) setConfirmedRequirements(parsed.confirmedRequirements);
        if (parsed.requirements) setRequirements(parsed.requirements);
        if (parsed.summary) setSummary(parsed.summary);
        if (parsed.sheetToPdfMapping) setSheetToPdfMapping(parsed.sheetToPdfMapping);
        if (parsed.analysisCompleted !== undefined) setAnalysisCompleted(parsed.analysisCompleted);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
        const hasResults = parsed.requirements && parsed.requirements.length > 0;
        setNotification(
          hasResults
            ? `üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ (${parsed.requirements.length} —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π)`
            : 'üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
        );

        // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => setNotification(null), 5000);
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:', error);
      // –û—á–∏—â–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.removeItem(STORAGE_KEY);
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    const dataToSave = {
      currentStep,
      confirmedRequirements,
      requirements,
      summary,
      sheetToPdfMapping,
      analysisCompleted,
      // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º: pdfFile (File –æ–±—ä–µ–∫—Ç—ã), extractedRequirements, showRequirementEditor, selectedPage, highlightText
    };

    try {
      localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));
      console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ localStorage:', error);
    }
  }, [currentStep, confirmedRequirements, requirements, summary, sheetToPdfMapping, analysisCompleted]);

  // –®–∞–≥ 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
  const handleRequirementsExtracted = (reqs: EditableRequirement[]) => {
    setExtractedRequirements(reqs);
    setShowRequirementEditor(true);
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É 2
  const handleRequirementsConfirmed = (reqs: EditableRequirement[]) => {
    setConfirmedRequirements(reqs);
    setShowRequirementEditor(false);
    setCurrentStep(2);
  };

  // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleRequirementsCancel = () => {
    setShowRequirementEditor(false);
    setExtractedRequirements(null);
  };

  // –®–∞–≥ 2: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
  const handleAnalysisComplete = (
    newRequirements: Requirement[],
    newSummary: string,
    mapping?: Record<string, number>
  ) => {
    setRequirements(newRequirements);
    setSummary(newSummary);
    setAnalysisCompleted(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
    if (mapping) {
      setSheetToPdfMapping(mapping);
      console.log('üìä –ü–æ–ª—É—á–µ–Ω mapping –ª–∏—Å—Ç–æ–≤:', mapping);
    }
  };

  const handleDocFileChange = (file: File | null) => {
    setPdfFile(file);
    setSelectedPage(null);
    setHighlightText('');
  };

  const handleRequirementSelect = (page: number, textToHighlight?: string) => {
    setSelectedPage(page);
    setHighlightText(textToHighlight || '');
    setPageChangeKey(prev => prev + 1);
  };

  // –°–±—Ä–æ—Å –∫ —à–∞–≥—É 1 (–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ)
  const handleReset = () => {
    setCurrentStep(1);
    setExtractedRequirements(null);
    setConfirmedRequirements(null);
    setRequirements([]);
    setSummary('');
    setPdfFile(null);
    setSelectedPage(null);
    setHighlightText('');
    setSheetToPdfMapping({});
    setAnalysisCompleted(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞

    // –û—á–∏—â–∞–µ–º localStorage
    try {
      localStorage.removeItem(STORAGE_KEY);
      console.log('üóëÔ∏è –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ localStorage');
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error);
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Header
  const headerContent = (
    <Header 
      onRequirementsExtracted={handleRequirementsExtracted}
      onAnalysisComplete={handleAnalysisComplete}
      onDocFileChange={handleDocFileChange}
      confirmedRequirements={confirmedRequirements}
      analysisCompleted={analysisCompleted}
    />
  );

  // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è)
  const leftPanelContent = (
    <div className="panel-content">
      {currentStep === 1 ? (
        <div className="empty-state">
          <div className="empty-icon">üìã</div>
          <p className="empty-text">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¢–ó –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
          <p className="empty-hint">
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –±—É–¥—É—Ç –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏ –ø–æ–∫–∞–∑–∞–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          </p>
        </div>
      ) : requirements.length > 0 ? (
        <RequirementList
          requirements={requirements}
          onSelect={handleRequirementSelect}
          sheetToPdfMapping={sheetToPdfMapping}
        />
      ) : (
        <div className="empty-state">
          <div className="empty-icon">üìä</div>
          <p className="empty-text">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é</p>
          <p className="empty-hint">
            –ü—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –ø–æ {confirmedRequirements?.filter(r => r.selected).length} —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
          </p>
        </div>
      )}
    </div>
  );

  // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (PDF + —Å–≤–æ–¥–∫–∞)
  const rightPanelContent = (
    <div className="panel-content">
      <PdfViewer 
        file={pdfFile} 
        page={selectedPage} 
        highlightText={highlightText}
        key={pageChangeKey}
      />
      {summary && (
        <div className="summary-container">
          <h3>–û–±—â–∞—è —Å–≤–æ–¥–∫–∞</h3>
          <pre>{summary}</pre>
          <button className="btn-reset" onClick={handleReset}>
            üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
          </button>
        </div>
      )}
    </div>
  );

  return (
    <div className="App">
      <ResizablePanels
        header={headerContent}
        leftPanel={leftPanelContent}
        rightPanel={rightPanelContent}
      />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π */}
      {showRequirementEditor && extractedRequirements && (
        <RequirementEditor
          requirements={extractedRequirements}
          onConfirm={handleRequirementsConfirmed}
          onCancel={handleRequirementsCancel}
        />
      )}

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö */}
      {notification && (
        <div className="notification">
          <div className="notification-content">
            <span className="notification-icon">üíæ</span>
            <span className="notification-text">{notification}</span>
            <button
              className="notification-close"
              onClick={() => setNotification(null)}
              aria-label="–ó–∞–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
            >
              ‚úï
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default App;