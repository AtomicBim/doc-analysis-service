import React, { useState } from 'react';
import './App.css';
import Header from './components/Header';
import RequirementList from './components/RequirementList';
import PdfViewer from './components/PdfViewer';
import RequirementEditor, { EditableRequirement } from './components/RequirementEditor';
import { Requirement } from './types';

function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–≤—É—Ö—à–∞–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
  const [currentStep, setCurrentStep] = useState<1 | 2>(1);
  
  // –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [extractedRequirements, setExtractedRequirements] = useState<EditableRequirement[] | null>(null);
  const [showRequirementEditor, setShowRequirementEditor] = useState(false);
  
  // –®–∞–≥ 2: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  const [confirmedRequirements, setConfirmedRequirements] = useState<EditableRequirement[] | null>(null);
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
  const [requirements, setRequirements] = useState<Requirement[]>([]);
  const [summary, setSummary] = useState<string>('');
  const [pdfFile, setPdfFile] = useState<File | null>(null);
  const [selectedPage, setSelectedPage] = useState<number | null>(null);
  const [highlightText, setHighlightText] = useState<string>('');
  const [pageChangeKey, setPageChangeKey] = useState<number>(0);
  
  // Mapping –Ω–æ–º–µ—Ä–æ–≤ –ª–∏—Å—Ç–æ–≤ –Ω–∞ —á–µ—Ä—Ç–µ–∂–∞—Ö ‚Üí –ø–æ—Ä—è–¥–∫–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ PDF
  const [sheetToPdfMapping, setSheetToPdfMapping] = useState<Record<string, number>>({});

  // –®–∞–≥ 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
  const handleRequirementsExtracted = (reqs: EditableRequirement[]) => {
    setExtractedRequirements(reqs);
    setShowRequirementEditor(true);
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É 2
  const handleRequirementsConfirmed = (reqs: EditableRequirement[]) => {
    setConfirmedRequirements(reqs);
    setShowRequirementEditor(false);
    setCurrentStep(2);
  };

  // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleRequirementsCancel = () => {
    setShowRequirementEditor(false);
    setExtractedRequirements(null);
  };

  // –®–∞–≥ 2: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
  const handleAnalysisComplete = (
    newRequirements: Requirement[],
    newSummary: string,
    mapping?: Record<string, number>
  ) => {
    setRequirements(newRequirements);
    setSummary(newSummary);
    if (mapping) {
      setSheetToPdfMapping(mapping);
      console.log('üìä –ü–æ–ª—É—á–µ–Ω mapping –ª–∏—Å—Ç–æ–≤:', mapping);
    }
  };

  const handleDocFileChange = (file: File | null) => {
    setPdfFile(file);
    setSelectedPage(null);
    setHighlightText('');
  };

  const handleRequirementSelect = (page: number, textToHighlight?: string) => {
    setSelectedPage(page);
    setHighlightText(textToHighlight || '');
    setPageChangeKey(prev => prev + 1);
  };

  // –°–±—Ä–æ—Å –∫ —à–∞–≥—É 1 (–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ)
  const handleReset = () => {
    setCurrentStep(1);
    setExtractedRequirements(null);
    setConfirmedRequirements(null);
    setRequirements([]);
    setSummary('');
    setPdfFile(null);
    setSelectedPage(null);
    setHighlightText('');
    setSheetToPdfMapping({});
  };

  return (
    <div className="App">
      <Header 
        onRequirementsExtracted={handleRequirementsExtracted}
        onAnalysisComplete={handleAnalysisComplete}
        onDocFileChange={handleDocFileChange}
        confirmedRequirements={confirmedRequirements}
      />
      <main className="App-main">
        <div className="left-panel">
          {currentStep === 1 ? (
            <div className="empty-state">
              <div className="empty-icon">üìã</div>
              <p className="empty-text">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¢–ó –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
              <p className="empty-hint">
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –±—É–¥—É—Ç –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏ –ø–æ–∫–∞–∑–∞–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
              </p>
            </div>
          ) : requirements.length > 0 ? (
            <RequirementList
              requirements={requirements}
              onSelect={handleRequirementSelect}
              sheetToPdfMapping={sheetToPdfMapping}
            />
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üìä</div>
              <p className="empty-text">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é</p>
              <p className="empty-hint">
                –ü—Ä–æ–µ–∫—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –ø–æ {confirmedRequirements?.filter(r => r.selected).length} —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
              </p>
            </div>
          )}
        </div>
        <div className="right-panel">
          <PdfViewer 
            file={pdfFile} 
            page={selectedPage} 
            highlightText={highlightText}
            key={pageChangeKey}
          />
          {summary && (
            <div className="summary-container">
              <h3>–û–±—â–∞—è —Å–≤–æ–¥–∫–∞</h3>
              <pre>{summary}</pre>
              <button className="btn-reset" onClick={handleReset}>
                üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
              </button>
            </div>
          )}
        </div>
      </main>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π */}
      {showRequirementEditor && extractedRequirements && (
        <RequirementEditor
          requirements={extractedRequirements}
          onConfirm={handleRequirementsConfirmed}
          onCancel={handleRequirementsCancel}
        />
      )}
    </div>
  );
}

export default App;