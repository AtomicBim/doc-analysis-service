/**
 * Custom hook –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
 */

import { useState, useEffect } from 'react';

interface UseLocalStorageOptions<T> {
  key: string;
  initialValue: T;
  onRestore?: (data: T) => void;
  onError?: (error: unknown) => void;
}

export function useLocalStorage<T>({
  key,
  initialValue,
  onRestore,
  onError,
}: UseLocalStorageOptions<T>) {
  const [storedValue, setStoredValue] = useState<T>(initialValue);

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    try {
      const item = localStorage.getItem(key);
      if (item) {
        const parsed = JSON.parse(item) as T;
        setStoredValue(parsed);
        onRestore?.(parsed);
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage (${key}):`, error);
      onError?.(error);
      // –û—á–∏—â–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.removeItem(key);
    }
  }, [key]); // –¢–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    try {
      localStorage.setItem(key, JSON.stringify(storedValue));
      console.log(`üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage (${key})`);
    } catch (error) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ localStorage (${key}):`, error);
      onError?.(error);
    }
  }, [key, storedValue]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
  const clearStorage = () => {
    try {
      localStorage.removeItem(key);
      console.log(`üóëÔ∏è –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ localStorage (${key})`);
      setStoredValue(initialValue);
    } catch (error) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage (${key}):`, error);
      throw error;
    }
  };

  return {
    storedValue,
    setStoredValue,
    clearStorage,
  };
}

