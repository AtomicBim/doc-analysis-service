
import React, { useState, useEffect, useRef, useCallback } from 'react';
import { Document, Page, pdfjs } from 'react-pdf';
import 'react-pdf/dist/Page/AnnotationLayer.css';
import 'react-pdf/dist/Page/TextLayer.css';
import { usePdfSearch } from '../hooks/usePdfSearch';
import './PdfViewer.css';

// Worker for react-pdf - –∏—Å–ø–æ–ª—å–∑—É–µ–º CDN –≤–µ—Ä—Å–∏—é, —Å–æ–≤–º–µ—Å—Ç–∏–º—É—é —Å react-pdf 10.2.0
pdfjs.GlobalWorkerOptions.workerSrc = `https://unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.mjs`;

interface PdfViewerProps {
  file: File | null;
  page: number | null;
  highlightText?: string;
}

const PdfViewer: React.FC<PdfViewerProps> = ({ file, page, highlightText = '' }) => {
  const [numPages, setNumPages] = useState<number | null>(null);
  const [currentPage, setCurrentPage] = useState<number>(1);
  const [scale, setScale] = useState<number>(1.0);
  const viewerRef = useRef<HTMLDivElement>(null);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º custom hook –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–º
  const { searchText, setSearchText, clearSearch } = usePdfSearch({ highlightText, page });

  function onDocumentLoadSuccess({ numPages }: { numPages: number }) {
    setNumPages(numPages);
    setCurrentPage(1);
  }

  // –ù–∞–¥–µ–∂–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ (—Ä–µ–Ω–¥–µ—Ä –º–æ–∂–µ—Ç –∑–∞–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è)
  useEffect(() => {
    if (!page || !viewerRef.current) return;
    let attempts = 0;
    const maxAttempts = 10;
    const tryScroll = () => {
      if (!viewerRef.current) return;
      const pageElement = viewerRef.current.querySelector(`[data-page-number="${page}"]`);
      if (pageElement) {
        (pageElement as HTMLElement).scrollIntoView({ behavior: 'smooth', block: 'start' });
        setCurrentPage(page);
      } else if (attempts < maxAttempts) {
        attempts += 1;
        setTimeout(tryScroll, 200);
      }
    };
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –¥–æ–∂–¥–∞—Ç—å—Å—è —Ä–µ–Ω–¥–µ—Ä–∞
    const t = setTimeout(tryScroll, 50);
    return () => clearTimeout(t);
  }, [page, numPages, scale, file]);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø–æ–∏—Å–∫–æ–º
  const highlightTextOnPage = useCallback(() => {
    if (!viewerRef.current || !searchText || !page) return;

    // –í–°–ï–ì–î–ê –æ—á–∏—â–∞–µ–º –í–°–ï –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –ø—Ä–∏ –Ω–æ–≤–æ–º –ø–æ–∏—Å–∫–µ
    const allTextLayers = viewerRef.current.querySelectorAll('.textLayer');
    allTextLayers.forEach(textLayer => {
      textLayer.querySelectorAll('.highlighted-text').forEach(el => {
        el.classList.remove('highlighted-text');
      });
    });

    // –ï—Å–ª–∏ searchText –ø—É—Å—Ç–æ–π - —Ç–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∫–∞, –≤—ã—Ö–æ–¥–∏–º
    if (!searchText.trim()) {
      return;
    }

    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫—É —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è
    const timer = setTimeout(() => {
      const pageWrapper = viewerRef.current?.querySelector(`[data-page-number="${page}"]`);
      if (!pageWrapper) {
        console.warn(`‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page} –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...`);
        return;
      }

      const textLayer = pageWrapper.querySelector('.textLayer');
      if (!textLayer) {
        console.log(`‚ÑπÔ∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π —Å–ª–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${page}. PDF –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å–∫–∞–Ω).`);
        return;
      }

      // –ò—â–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ (–Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É)
      const searchLower = searchText.toLowerCase().trim();
      const textElements = textLayer.querySelectorAll('span[role="presentation"]');

      // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
      const searchTokens = searchLower.split(/\s+/).filter(t => t.length > 2); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–ª–æ–≤–∞

      let foundElements: HTMLElement[] = [];
      let exactMatch = false;

      // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      textElements.forEach(span => {
        const text = span.textContent?.toLowerCase() || '';

        // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        if (text.includes(searchLower)) {
          (span as HTMLElement).classList.add('highlighted-text');
          foundElements.push(span as HTMLElement);
          exactMatch = true;
        }
      });

      // –ï—Å–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ—Ç - –∏—â–µ–º –ø–æ —Ç–æ–∫–µ–Ω–∞–º (—á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)
      if (!exactMatch && searchTokens.length > 0) {
        console.log(`üîç –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –ø–æ —Ç–æ–∫–µ–Ω–∞–º: ${searchTokens.join(', ')}`);

        textElements.forEach(span => {
          const text = span.textContent?.toLowerCase() || '';

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Ö–æ—Ç—è –±—ã 60% —Ç–æ–∫–µ–Ω–æ–≤
          const matchedTokens = searchTokens.filter(token => text.includes(token));
          if (matchedTokens.length >= Math.ceil(searchTokens.length * 0.6)) {
            (span as HTMLElement).classList.add('highlighted-text');
            foundElements.push(span as HTMLElement);
          }
        });
      }

      if (foundElements.length > 0) {
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–µ—Ä–≤–æ–º—É –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        const firstHighlight = foundElements[0];
        firstHighlight.scrollIntoView({ behavior: 'smooth', block: 'center' });

        console.log(`‚úÖ –¢–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${page}: ${foundElements.length} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π (${exactMatch ? '—Ç–æ—á–Ω–æ–µ' : '—á–∞—Å—Ç–∏—á–Ω–æ–µ'} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)`);
        console.log(`üîç –ü–æ–∏—Å–∫–æ–≤—ã–π —Ç–µ–∫—Å—Ç: "${searchText}"`);
      } else {
        console.warn(`‚ùå –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${page}: "${searchText}"`);
        console.warn(`üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: —Ç–µ–∫—Å—Ç –Ω–∞ —Å–∫–∞–Ω–µ, —Ä–∞–∑–±–∏—Ç –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∏–ª–∏ –æ–ø–µ—á–∞—Ç–∫–∞ –≤ –∞–Ω–∞–ª–∏–∑–µ`);
      }
    }, 500); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–ª–æ—è

    return () => clearTimeout(timer);
  }, [searchText, page]);

  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ searchText –∏–ª–∏ page
  useEffect(() => {
    const cleanup = highlightTextOnPage();
    return cleanup;
  }, [highlightTextOnPage]);

  const handleZoomIn = () => {
    setScale(prev => Math.min(prev + 0.2, 3.0));
  };

  const handleZoomOut = () => {
    setScale(prev => Math.max(prev - 0.2, 0.5));
  };

  const handleResetZoom = () => {
    setScale(1.0);
  };

  if (!file) {
    return (
      <div className="pdf-viewer-empty">
        <div className="empty-icon">üìÑ</div>
        <p className="empty-text">–î–æ–∫—É–º–µ–Ω—Ç PDF –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∑–¥–µ—Å—å</p>
        <p className="empty-hint">–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏</p>
      </div>
    );
  }

  return (
    <div className="pdf-viewer-container">
      <div className="pdf-viewer-toolbar">
        <div className="toolbar-info">
          <span className="page-info">
            –°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentPage} –∏–∑ {numPages || '?'}
          </span>
          {searchText && (
            <span className="search-indicator" title={`–ü–æ–∏—Å–∫: ${searchText}`}>
              üîç "{searchText.substring(0, 30)}..."
            </span>
          )}
        </div>
        <div className="toolbar-controls">
          <button className="toolbar-button" onClick={handleZoomOut} title="–£–º–µ–Ω—å—à–∏—Ç—å">
            üîç‚àí
          </button>
          <span className="zoom-level">{Math.round(scale * 100)}%</span>
          <button className="toolbar-button" onClick={handleZoomIn} title="–£–≤–µ–ª–∏—á–∏—Ç—å">
            üîç+
          </button>
          <button className="toolbar-button" onClick={handleResetZoom} title="–°–±—Ä–æ—Å–∏—Ç—å –º–∞—Å—à—Ç–∞–±">
            ‚Ü∫
          </button>
          {searchText && (
            <button
              className="toolbar-button clear-search"
              onClick={clearSearch}
              title="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫"
            >
              ‚úï
            </button>
          )}
        </div>
      </div>
      <div ref={viewerRef} className="pdf-viewer-content">
        <Document 
          file={file} 
          onLoadSuccess={onDocumentLoadSuccess}
          loading={
            <div className="pdf-loading">
              <div className="spinner-large"></div>
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞...</p>
            </div>
          }
          error={
            <div className="pdf-error">
              <span className="error-icon">‚ö†Ô∏è</span>
              <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ PDF</p>
            </div>
          }
        >
          {Array.from(new Array(numPages), (el, index) => (
            <div key={`page_${index + 1}`} className="pdf-page-wrapper">
              <Page 
                pageNumber={index + 1} 
                scale={scale}
                renderTextLayer={true}
                renderAnnotationLayer={true}
              />
              {/* –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ CSS —Å—Ç–∏–ª–∏ text-layer */}
            </div>
          ))}
        </Document>
      </div>
    </div>
  );
};

export default PdfViewer;
